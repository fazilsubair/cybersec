<?xml version="1.0"?>
<!DOCTYPE items [
<!ELEMENT items (item*)>
<!ATTLIST items burpVersion CDATA "">
<!ATTLIST items exportTime CDATA "">
<!ELEMENT item (time, url, host, port, protocol, method, path, extension, request, status, responselength, mimetype, response, comment)>
<!ELEMENT time (#PCDATA)>
<!ELEMENT url (#PCDATA)>
<!ELEMENT host (#PCDATA)>
<!ATTLIST host ip CDATA "">
<!ELEMENT port (#PCDATA)>
<!ELEMENT protocol (#PCDATA)>
<!ELEMENT method (#PCDATA)>
<!ELEMENT path (#PCDATA)>
<!ELEMENT extension (#PCDATA)>
<!ELEMENT request (#PCDATA)>
<!ATTLIST request base64 (true|false) "false">
<!ELEMENT status (#PCDATA)>
<!ELEMENT responselength (#PCDATA)>
<!ELEMENT mimetype (#PCDATA)>
<!ELEMENT response (#PCDATA)>
<!ATTLIST response base64 (true|false) "false">
<!ELEMENT comment (#PCDATA)>
]>
<items burpVersion="2024.5.5" exportTime="Mon Sep 23 15:22:20 IST 2024">
  <item>
    <time>Mon Sep 23 15:21:43 IST 2024</time>
    <url><![CDATA[http://shop.trickster.htb/login?back=http%3A%2F%2Fshop.trickster.htb%2F]]></url>
    <host ip="10.10.11.34">shop.trickster.htb</host>
    <port>80</port>
    <protocol>http</protocol>
    <method><![CDATA[POST]]></method>
    <path><![CDATA[/login?back=http%3A%2F%2Fshop.trickster.htb%2F]]></path>
    <extension>null</extension>
    <request base64="true"><![CDATA[UE9TVCAvbG9naW4/YmFjaz1odHRwJTNBJTJGJTJGc2hvcC50cmlja3N0ZXIuaHRiJTJGIEhUVFAvMS4xDQpIb3N0OiBzaG9wLnRyaWNrc3Rlci5odGINClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NDsgcnY6MTA5LjApIEdlY2tvLzIwMTAwMTAxIEZpcmVmb3gvMTE1LjANCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLCovKjtxPTAuOA0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUyxlbjtxPTAuNQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCBicg0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQNCkNvbnRlbnQtTGVuZ3RoOiA5OA0KT3JpZ2luOiBodHRwOi8vc2hvcC50cmlja3N0ZXIuaHRiDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQpSZWZlcmVyOiBodHRwOi8vc2hvcC50cmlja3N0ZXIuaHRiL2xvZ2luP2JhY2s9aHR0cCUzQSUyRiUyRnNob3AudHJpY2tzdGVyLmh0YiUyRg0KQ29va2llOiBQSFBTRVNTSUQ9amtkY2RhN2Exc2c1OHIxbjBjOHE0MDExaDM7IFByZXN0YVNob3AtODQ2MGM4NjRjODhjMmYzMDc3MzRhYjE1ZjIyNDRmNDY9ZGVmNTAyMDA0YzY1Mjk4NWZjNWE0MTZiODZlMzQ3YTQ3YzBmODNlNTBjNDk1YWUyNDY5Nzc0ZjZiYmZjZmI3NWFlZjVmMzJkYmVmYjYzNGUyZWQwMDEwZThjOTBkMWRkZGQ4NTNlMjgwZWI4Y2Q5MGE0MDcxN2U3MzNhZDNmNTJmNTc4OGY1NWY0Y2IzMTAwMjc2OWYxZWFlNzg1YzY0OTA4ODUyMjcwYTQzY2E1MDdkYjFlMTBkODhiMjdlM2EwY2Q5YzJlOTRmODU3YjY5Zjg1NDFjNDg0YTk5OGMzZmUxZWQ1YjhlNzAyYWI0ZGNiMGNkOThiM2VhY2Y1N2Q0Mzk2MmQ4ZGU4MDNhZmJjNmYxNTk4YTFjZDRlNjljZDQ0YjNmZTVhZWFhNGE5NjU4MzYzZjM5OTY1MTgwYzBhMTVkYzc5NWRhZWIwMWE3MDhjNGE2NmExNDFhOTllMjExZWMwZjBjYTkyY2I4M2Q5Nzg5ODcyMDRkNzFlZmExNDMyZjM0M2Q0MDQ3YTA2NDJhNDMxMTRiMTU0OTRjZWI1Y2JmMzAyMDFjY2EwZDc5ZTMwZThmNWUyOTU3ODNjNGExNmQ1MWY4M2VmZTEzODE2NjYzNDRlZTE2NTk4ZTQ3YzA5ZDIwMTYyZjUzZThiNzM3NDA4MjBkYjE5ZjYwM2VhYjM2MmM1ZmZhNWEyM2ZmZDFhNGRjNjc0ZjZlNTA5ZmMyZjEwMmMxYjcwMTExOTgwZDhjMWI4ZjVjNzdhZjliM2U0OTNmM2Q2YmJkYzZlNTVkZWMyN2RlNzBlNzliMzNjZDVhN2IxZTRhN2E2YTQ4YjM1MTJiZDNjYjZhMjU1MTNhNzgzNGVkM2VlYTU4YmU2OTQ1MTE3NWIwNDg2MmFiMmQ0MjU0ZTlmYzRiMjFmYmZjMzUxNWM4NDFjOTM5N2QzMjUNClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENCg0KYmFjaz1odHRwJTNBJTJGJTJGc2hvcC50cmlja3N0ZXIuaHRiJTJGJmVtYWlsPWFkbWluJTQwdHJpa3N0ZXIuaHRiJnBhc3N3b3JkPXBhc3N3b3JkJnN1Ym1pdExvZ2luPTE=]]></request>
    <status>200</status>
    <responselength>47316</responselength>
    <mimetype>HTML</mimetype>
    <response base64="true"><![CDATA[]]></response>
    <comment></comment>
  </item>
</items>
